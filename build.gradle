// buildscript for QueryDsl
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.web'
version = '3.0.0-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// Redis for Serialize & Deserialize
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Embedded Redis for Test Environment
	implementation 'it.ozimov:embedded-redis:0.7.2'

	// H2
	runtimeOnly 'com.h2database:h2'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// OAuth2 client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring Boot devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Gson
	implementation 'com.google.code.gson:gson:2.10.1'

	// jjwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359' // java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter 에러 방지 -> jdk 8 이후 삭제되어 수동 추가 필요: jwtBuilder 를 사용하려면 추가해줘야 한다.

	// Swagger-UI: springdoc-openapi
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// QueryDsl; SpringBoot 3.0 이상부터 (javax -> jakarta) 라이브러리명 변경 사항을 반영해줘야 QClass 가 생성된다.
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor (
			'jakarta.persistence:jakarta.persistence-api:3.1.0', // version 명시로 해결 -> [ERROR] Could not resolve all files for configuration ':compileClasspath'.
			'jakarta.annotation:jakarta.annotation-api:2.1.1', // version 명시로 해결 -> [ERROR] Could not resolve all files for configuration ':compileClasspath'.
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	)

	// EasyRandom
	testImplementation 'org.jeasy:easy-random-core:5.0.0'
	implementation 'org.jeasy:easy-random-core:5.0.0'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.5'

	// redis-reactive
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive:3.1.5'

	// GenericObjectPoolConfig
	implementation 'org.apache.commons:commons-pool2:2.12.0'

	// Kafka
	implementation 'org.apache.kafka:kafka_2.13:3.6.0'

	// Logback Kafka Appender
	implementation 'com.github.danielwegener:logback-kafka-appender:0.2.0-RC2'


}

tasks.named('test') {
	useJUnitPlatform()
}

// sourceSets for QueryDsl
sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java"]
		}
	}
}